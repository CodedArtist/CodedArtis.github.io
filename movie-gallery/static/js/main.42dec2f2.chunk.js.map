{"version":3,"sources":["lib/api.ts","components/MovieCard.tsx","components/MovieCardGroup.tsx","pages/Home.tsx","components/Header.tsx","pages/Search.tsx","components/Pagination.tsx","pages/List.tsx","pages/Detail.tsx","App.tsx","index.tsx"],"names":["BASE_URL","fetchData","params","a","fetch","URLSearchParams","toString","response","json","search","id","plot","i","MovieCard","props","history","useHistory","goDetail","push","movie","imdbID","className","src","Poster","alt","Title","onClick","loading","Year","Type","MovieCardGroup","movies","map","Home","useState","setMovies","useEffect","s","page","then","data","Search","Header","location","pathname","startsWith","inputValue","setInputValue","errorInfo","setErrorInfo","test","onSubmit","e","preventDefault","data-error","type","value","placeholder","onInput","target","Pagination","current","total","setCurrent","actuallyTotal","maxPage","Math","ceil","middlePageList","setMiddlePageList","pageList","Array","from","item","idx","length","pop","index","includes","slice","findIndex","disabled","List","searchValue","useParams","responseError","setResponseError","paramsPage","get","Number","setPage","setTotal","Error","totalResults","replace","Detail","movieDetail","setMovieDetail","willUnMount","setWillUnMount","window","scrollTo","top","getDetail","alert","goBack","Released","BoxOffice","Runtime","Actors","Director","Writer","Rated","Genre","Plot","Language","Country","Awards","split","filter","award","Ratings","rate","Source","Value","App","basename","path","to","exact","render","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42dec2f2.chunk.js","sourcesContent":["import {\n  SearchParams,\n  DetailParams,\n  SearchResponseBody,\n  DetailResponseBody,\n} from './types';\n\nconst BASE_URL = 'https://omdbapi.com/?apiKey=4a3b711b&';\n\nasync function fetchData<T>(\n  params: Record<string, string | number>\n): Promise<T> {\n  const response = await fetch(\n    BASE_URL + new URLSearchParams(params as Record<string, string>).toString()\n  );\n  return await response.json();\n}\n\nexport async function search(params: SearchParams) {\n  return await fetchData<SearchResponseBody>(params);\n}\n\nexport async function getDetail(id: string, plot: 'full' | 'short' = 'full') {\n  const params: DetailParams = {\n    i: id,\n    plot,\n  };\n\n  return await fetchData<DetailResponseBody>(params);\n}\n","import '@/styles/movie-card.scss';\nimport { MovieBrief } from '@/lib/types';\nimport { useHistory } from 'react-router';\n\nexport default function MovieCard(props: { movie: MovieBrief }) {\n  const history = useHistory();\n\n  function goDetail() {\n    history.push(`/detail/${props.movie.imdbID}`);\n  }\n\n  return (\n    <div className=\"movie-card\">\n      <img\n        src={\n          props.movie.Poster === 'N/A'\n            ? 'http://bpic.588ku.com/element_pic/01/47/03/35574339ab3c813.jpg'\n            : props.movie.Poster\n        }\n        alt={props.movie.Title}\n        onClick={goDetail}\n        loading=\"lazy\"\n      />\n      <div>\n        <h2 className=\"movie-card__title\" onClick={goDetail}>\n          {props.movie.Title}\n        </h2>\n        <span className=\"movie-card__year\">‰∏äÊò†Âπ¥‰ªΩÔºö{props.movie.Year}</span>\n        <span className=\"movie-card__type\">‰ΩúÂìÅÁ±ªÂûãÔºö{props.movie.Type}</span>\n      </div>\n    </div>\n  );\n}\n","import { MovieBrief } from '@/lib/types';\nimport MovieCard from '@/components/MovieCard';\nimport '@/styles/movie-card-group.scss';\n\nexport default function MovieCardGroup({ movies }: { movies: MovieBrief[] }) {\n  return (\n    <div className=\"movie-card-group\">\n      {movies.map((movie) => (\n        <MovieCard key={movie.imdbID} movie={movie} />\n      ))}\n    </div>\n  );\n}\n","import { search } from '@/lib/api';\nimport MovieCardGroup from '@/components/MovieCardGroup';\nimport { useEffect, useState } from 'react';\nimport { MovieBrief } from '@/lib/types';\n\nexport default function Home() {\n  const [movies, setMovies] = useState<MovieBrief[]>([]);\n\n  useEffect(() => {\n    search({ s: 'man', page: 1 }).then((data) => {\n      if (data.Search) {\n        setMovies(data.Search);\n      }\n    });\n  }, []);\n\n  return <MovieCardGroup movies={movies} />;\n}\n","import '@/styles/header.scss';\nimport { useHistory } from 'react-router';\n\nexport default function Header() {\n  const history = useHistory();\n\n  return (\n    <header>\n      <span onClick={() => history.push('/home')}>üé¨ ÁîµÂΩ±ÁîªÂªä</span>\n      {!history.location.pathname.startsWith('/search') && (\n        <span onClick={() => history.push('/search')}>üîç ÊêúÁ¥¢ </span>\n      )}\n    </header>\n  );\n}\n","import { FormEvent, useEffect, useState } from 'react';\nimport '@/styles/search.scss';\nimport { useHistory } from 'react-router';\n\nexport default function Search() {\n  const history = useHistory();\n  const [inputValue, setInputValue] = useState('');\n  const [errorInfo, setErrorInfo] = useState('');\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault();\n    if (inputValue) {\n      history.push(`/list/${inputValue}`);\n    }\n  }\n\n  function handleInput(e: FormEvent<HTMLInputElement>) {\n    setInputValue((e.target as HTMLInputElement).value);\n  }\n\n  useEffect(() => {\n    if (/[^a-z\\s\\d]/i.test(inputValue)) {\n      setErrorInfo('üì£ ‰ªÖËã±ÊñáÊêúÁ¥¢ÊúâÊïà');\n    } else {\n      setErrorInfo('');\n    }\n  }, [inputValue]);\n\n  return (\n    <div className=\"search\">\n      <div className=\"search-box\">\n        <form onSubmit={handleSubmit} data-error={errorInfo}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            placeholder=\"ËØ∑ËæìÂÖ•ÁîµÂΩ±ÂêçÁß∞\"\n            onInput={handleInput}\n          />\n          <button type=\"submit\">üîç</button>\n        </form>\n        <div className=\"search-histories\" />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport '@/styles/pagination.scss';\n\ninterface PaginationProps {\n  current: number;\n  total: number;\n  setCurrent: (value: number) => void;\n}\n\nconst PAGE_SIZE = 10;\n\nexport default function Pagination({\n  current,\n  total,\n  setCurrent,\n}: PaginationProps) {\n  // API ÈôêÂà∂ page ÊúÄÂ§ß‰∏∫ 100\n  const actuallyTotal = total > 1000 ? 1000 : total;\n  const maxPage = Math.ceil(actuallyTotal / PAGE_SIZE);\n  const [middlePageList, setMiddlePageList] = useState<number[]>([]);\n\n  // ËÆæÁΩÆÂàÜÈ°µÂô®‰∏≠Èó¥ÁöÑÂá†‰∏™È°µÁ†ÅÂÄº\n  useEffect(() => {\n    let pageList: number[] = [];\n    // pageList[0] ‰∏ÄÂÆö‰∏∫ 2ÔºåpageList[-1] ÊúÄÂ§ß‰∏∫ maxPage\n    if (maxPage <= 2) {\n      pageList = [];\n    } else if (maxPage <= 7) {\n      pageList = Array.from(Array(maxPage - 2)).map((item, idx) => idx + 2);\n    } else {\n      pageList = Array.from(Array(current - 1)).map((item, idx) => idx + 2);\n\n      if (pageList.length && pageList[pageList.length - 1] === maxPage) {\n        pageList.pop();\n      }\n\n      for (let index = 1; index <= 5; index++) {\n        if (current + index < maxPage) {\n          pageList.push(current + index);\n        } else {\n          break;\n        }\n      }\n      if (pageList.length > 5) {\n        if ([1, 2, 3, 4].includes(current)) {\n          pageList = pageList.slice(0, 5);\n        } else if (\n          [maxPage, maxPage - 1, maxPage - 2, maxPage - 3].includes(current)\n        ) {\n          pageList = pageList.slice(-5);\n        } else {\n          const idx = pageList.findIndex((page) => page === current);\n          pageList = pageList.slice(idx - 2, idx + 3);\n        }\n      }\n    }\n\n    setMiddlePageList(pageList);\n  }, [current, actuallyTotal, maxPage]);\n\n  return (\n    <p className=\"pagination\">\n      <span className=\"total\">ÂÖ± {actuallyTotal} Êù°Êï∞ÊçÆ</span>\n      <button onClick={() => setCurrent(1)} disabled={1 === current}>\n        1\n      </button>\n      {middlePageList[0] && middlePageList[0] !== 2 && '...'}\n      {middlePageList.map((page) => (\n        <button\n          key={page}\n          disabled={page === current}\n          onClick={() => setCurrent(page)}\n        >\n          {page}\n        </button>\n      ))}\n      {middlePageList.length &&\n        middlePageList[middlePageList.length - 1] !== maxPage - 1 &&\n        '...'}\n      {maxPage !== 1 && (\n        <button\n          onClick={() => setCurrent(maxPage)}\n          disabled={maxPage === current}\n        >\n          {maxPage}\n        </button>\n      )}\n    </p>\n  );\n}\n","import '@/styles/list.scss';\nimport { search } from '@/lib/api';\nimport MovieCardGroup from '@/components/MovieCardGroup';\nimport { useEffect, useState } from 'react';\nimport { MovieBrief } from '@/lib/types';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Pagination from '@/components/Pagination';\n\ninterface routeParams {\n  searchValue: string;\n}\n\nexport default function List() {\n  const history = useHistory();\n  const searchValue = useParams<routeParams>().searchValue;\n  const [movies, setMovies] = useState<MovieBrief[]>([]);\n  const [responseError, setResponseError] = useState('');\n  const paramsPage = new URLSearchParams(history.location.search).get('page');\n  const [page, setPage] = useState(Number(paramsPage) || 1);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    search({ s: searchValue, page }).then((data) => {\n      if (data.Error) {\n        setResponseError(data.Error);\n      }\n      if (data.Search) {\n        setMovies(data.Search);\n      }\n      if (data.totalResults) {\n        setTotal(Number(data.totalResults));\n      }\n    });\n  }, [searchValue, page]);\n\n  useEffect(() => {\n    if (!history.location.search.includes(`?page=${page}`)) {\n      history.replace(`${history.location.pathname}?page=${page}`);\n    }\n  }, [page, history]);\n\n  return (\n    <div className=\"list\">\n      <h2>üê±‚Äçüèç„Äê{searchValue}„ÄëÁöÑÊêúÁ¥¢ÁªìÊûú</h2>\n      {responseError ? (\n        <div className=\"error-box\">\n          <p>Êé•Âè£ÈîôËØØÔºö{responseError}</p>\n          <p>Êç¢‰∏™ÂÖ≥ÈîÆËØçËØïËØïÂêß</p>\n        </div>\n      ) : (\n        <>\n          <MovieCardGroup movies={movies} />\n          <Pagination setCurrent={setPage} current={page} total={total} />\n        </>\n      )}\n    </div>\n  );\n}\n","import { getDetail } from '@/lib/api';\nimport { MovieDetail } from '@/lib/types';\nimport '@/styles/detail.scss';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\n\ninterface RouteParams {\n  id: string;\n}\n\nconst EMPTY_VALUE = 'N/A';\n\nexport default function Detail() {\n  const routeParams = useParams<RouteParams>();\n  const id = routeParams.id;\n  const history = useHistory();\n  const [movieDetail, setMovieDetail] = useState<MovieDetail>(\n    {} as MovieDetail\n  );\n  const [willUnMount, setWillUnMount] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo({ top: 0 });\n\n    getDetail(id).then((data) => {\n      if (data.Error) {\n        alert(data.Error);\n      } else {\n        !willUnMount && setMovieDetail(data as MovieDetail);\n      }\n    });\n\n    return () => {\n      setWillUnMount(true);\n    };\n  }, [id, willUnMount]);\n\n  return (\n    <div className=\"detail\">\n      <span onClick={history.goBack}>üîô ËøîÂõû</span>\n      <img\n        src={\n          movieDetail.Poster === 'N/A'\n            ? 'http://bpic.588ku.com/element_pic/01/47/03/35574339ab3c813.jpg'\n            : movieDetail.Poster\n        }\n        alt=\"\"\n      />\n      <p className=\"title\">{movieDetail.Title}</p>\n\n      <p>Á±ªÂûãÔºö{movieDetail.Type}</p>\n\n      <p>‰∏äÊò†Êó•ÊúüÔºö{movieDetail.Released}</p>\n      <p>Á•®ÊàøÔºö{movieDetail.BoxOffice?.replace('$', 'üí≤') || EMPTY_VALUE}</p>\n\n      <p>Êó∂ÈïøÔºö{movieDetail.Runtime}</p>\n      <p>ÊºîÂëòÔºö{movieDetail.Actors}</p>\n      <p>ÂØºÊºîÔºö{movieDetail.Director}</p>\n      <p>ÁºñÂâßÔºö{movieDetail.Writer}</p>\n      <p>ÂàÜÁ∫ßÔºö{movieDetail.Rated}</p>\n      <p>ÂàÜÁ±ªÔºö{movieDetail.Genre}</p>\n\n      <p>ÂâßÊÉÖÔºö{movieDetail.Plot}</p>\n      <p>ËØ≠Ë®ÄÔºö{movieDetail.Language}</p>\n      <p>ÂõΩÂÆ∂Ôºö{movieDetail.Country}</p>\n\n      <p>Ëé∑Â•ñ</p>\n      <ul>\n        {movieDetail.Awards?.split('.')\n          .filter((award) => award && award !== EMPTY_VALUE)\n          .map((award) => (\n            <li key={award}>üèÜ {award}</li>\n          ))}\n      </ul>\n\n      <p>ËØÑÂàÜ</p>\n      <ul>\n        {movieDetail.Ratings?.map((rate) => (\n          <li key={rate.Source}>\n            {rate.Source}: {rate.Value}\n          </li>\n        ))}\n        {/* <li key=\"IMDB\">IMDB: {movieDetail.Ratings}</li> */}\n      </ul>\n    </div>\n  );\n}\n","import React from 'react';\nimport '@/styles/app.scss';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Header from '@/components/Header';\nimport Search from '@/pages/Search';\nimport List from '@/pages/List';\nimport Detail from '@/pages/Detail';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/movie-gallery\">\n        <Header />\n        <Switch>\n          <Redirect path=\"/\" to=\"/home\" exact />\n          <Route path=\"/list/:searchValue\" render={() => <List />} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/search\">\n            <Search />\n          </Route>\n          <Route path=\"/detail/:id\" component={Detail} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@/styles/index.scss';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}